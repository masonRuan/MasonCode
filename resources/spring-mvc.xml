<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">


    <!-- 直接轉換Controller class name 為 url pattern e.g. TestController > /test,/test/* -->
    <bean
            class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <property name="interceptors">
            <list>
                <!--切換語系 -->
                <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                    <!--e.g. ?lang=zh_TW -->
                    <property name="paramName" value="lang"/>
                </bean>

                <!-- 請求前後處理 -->
                <bean class="cc.felix.core.base.filter.SessionHandlerInterceptor">
                    <property name="skipUrls">
                        <list>
                            <value>(.)*ajax(.)*</value>
                            <value>(.)*select(.)*</value>
                        </list>
                    </property>
                </bean>

                <!-- Event Log -->
                <bean class="cc.felix.core.base.filter.EventLogInterceptor"/>
            </list>
        </property>
    </bean>

    <bean id="tilesConfigurer"
          class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">

        <!-- jsp的路徑在這裡指定 -->
        <property name="definitionsFactoryClass"
                  value="cc.felix.core.base.utils.tiles.FmsTilesDefinitionsFactory"/>
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles/tiles-*.xml</value>
            </list>
        </property>
    </bean>

    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.tiles3.TilesView"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>

    <!--檔案上傳處理 -->
    <bean id="multipartResolver"
          class="cc.felix.core.base.utils.mvc.FmsMultipartResolver">
        <!--10MB -->
        <property name="maxUploadSize" value="10000000"/>
    </bean>


    <!--語系處理 -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="zh_TW"/>
    </bean>

    <!--Controller錯誤處理 -->
    <bean id="exceptionResolver"
          class="cc.felix.core.base.utils.mvc.FmsHandlerExceptionResolver"
          autowire="byType"/>

    <!-- 語言訊息檔 -->
    <bean id="messageSource"
          class="cc.felix.core.base.utils.mvc.FmsReloadableResourceBundleMessageSource">
        <property name="basenames">
            <bean class="cc.felix.core.base.modules.ProjectMessageFinder"/>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- 
    Spring provides full support for the Bean Validation API. 
    This includes convenient support for bootstrapping a JSR-303/JSR-349 Bean Validation provider as a Spring bean. 
    This allows for a javax.validation.ValidatorFactory or javax.validation.Validator to be injected wherever validation is needed in your application.
     -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>


    <!-- REST-Based JSON Services -->
    <bean id="jacksonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jacksonMessageConverter"/>
            </list>
        </property>
    </bean>

</beans>
